version: "3.3"

networks:
  backend:
    external: true

services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      # for redirect to https
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"

      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=panachai.ny@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ## If use cloudflare tunnel no need to export port out from docker network
    ports:
      - "443:443"
      # - "80:80"
      - "8080:8080" # don't enable 8080 on production.
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # - ./config:/etc/traefik # for use config file instead command
    networks:
      - backend

  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    # ไม่น่าเกี่ยว
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.on-the-everything.work`)"
      - "traefik.http.routers.whoami.entrypoints=web, websecure"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
    networks:
      - backend

## Another example
# version: "3.1"

# services:
#   reverse-proxy:
#     image: traefik:v2.10.5
#     command:
#       - --entrypoints.websecure.address=:443
#       - --api.insecure=true
#       - --providers.docker=true
#       - --certificatesresolvers.let.acme.email=your@gmail.com
#       - --certificatesResolvers.let.acme.tlsChallenge=true
#       - --certificatesresolvers.let.acme.storage=/acme.json

#     ports:
#       - "443:443"
#       - "8080:8080"

#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#       - "./acme.json:/acme.json"

#   backend:
#     # build:
#     #   context: .
#     #   dockerfile: "../Dockerfile"
#     image: example-be
#     container_name: "backend"

#     labels:
#       - traefik.enable=true
#       - traefik.http.routers.backend.rule=PathPrefix(`/ex-prefix`) && Host(`on-the-everything.work`)
#       - traefik.http.services.backend.loadbalancer.server.port=80
#       - traefik.http.routers.backend.tls=true
#       - traefik.http.routers.backend.entrypoints=websecure
#       - traefik.http.routers.backend.tls.certresolver=let
#       - traefik.http.routers.backend.middlewares=st
#       - traefik.http.middlewares.st.stripprefix.prefixes=/ex-prefix
